
// Layout
// ============================================ /

@function rem($size) {
	$remSize: $size / 16;
	@return #{$remSize}rem;
}

// Container
@mixin container($maxWidth: rem(1200)) {
	display: block;
	max-width: $maxWidth;
	margin-left: auto;
	margin-right: auto;
	padding: 0 $size_container_padding;
}

// Clearfix
@mixin clearfix {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin retina-rules() {
	@media
	only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (   min--moz-device-pixel-ratio: 2),
	only screen and (     -o-min-device-pixel-ratio: 2/1),
	only screen and (        min-device-pixel-ratio: 2),
	only screen and (                min-resolution: 192dpi),
	only screen and (                min-resolution: 2dppx) { 
	  
	  @content

	}
}

// Typography
// ============================================ /

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) + px;
	font-size: $sizeValue + rem;
}

@mixin h1 {
	font-size: $h1_size;
	line-height: $h1_line_height;
}

@mixin h2 {
	font-size: $h2_size;
	line-height: $h2_line_height;
}

@mixin h3 {
	font-size: $h3_size;
	line-height: $h3_line_height;
}

@mixin h4 {
	font-size: $h4_size;
	line-height: $h4_line_height;
}

@mixin h5 {
	font-size: $h5_size;
	line-height: $h5_line_height;
}

@mixin h6 {
	font-size: $h6_size;
	line-height: $h6_line_height;
}

@mixin link-color($color: white, $hover: $color_link_hover) {
	color: $color;
	&:visited {
		color: $color;
	}
	&:hover,
	&:focus,
	&:active {
		color: $hover;
	}
}

@mixin text-underline($color: $red) {
	position: relative;
	&:after {
		content: "";
		height: 1px;
		background: $color;
		display: block;
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
	}
}

@mixin text-underline-hover($color:$blue) {
	&:after {
		@include transition(all 200ms ease);	
	}
	&:hover:after {
		left: -0.3em;
		right: -0.3em;
		background: $color;
	}
}
